digraph "CFG for '__ockl_hostcall_internal' function" {
	label="CFG for '__ockl_hostcall_internal' function";

	Node0x5563af2d3990 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%9:\l  %10 = alloca i8*, align 8, addrspace(5)\l  %11 = alloca i32, align 4, addrspace(5)\l  %12 = alloca i64, align 8, addrspace(5)\l  %13 = alloca i64, align 8, addrspace(5)\l  %14 = alloca i64, align 8, addrspace(5)\l  %15 = alloca i64, align 8, addrspace(5)\l  %16 = alloca i64, align 8, addrspace(5)\l  %17 = alloca i64, align 8, addrspace(5)\l  %18 = alloca i64, align 8, addrspace(5)\l  %19 = alloca i64, align 8, addrspace(5)\l  %20 = alloca i32, align 4, addrspace(5)\l  %21 = alloca i32, align 4, addrspace(5)\l  %22 = alloca %0 addrspace(1)*, align 8, addrspace(5)\l  %23 = alloca i64, align 8, addrspace(5)\l  %24 = alloca %1 addrspace(1)*, align 8, addrspace(5)\l  %25 = alloca %2 addrspace(1)*, align 8, addrspace(5)\l  %26 = alloca \<2 x i64\>, align 16, addrspace(5)\l  store i8* %0, i8* addrspace(5)* %10, align 8, !tbaa !4\l  store i32 2, i32 addrspace(5)* %11, align 4, !tbaa !8\l  store i64 %1, i64 addrspace(5)* %12, align 8, !tbaa !10\l  store i64 %2, i64 addrspace(5)* %13, align 8, !tbaa !10\l  store i64 %3, i64 addrspace(5)* %14, align 8, !tbaa !10\l  store i64 %4, i64 addrspace(5)* %15, align 8, !tbaa !10\l  store i64 %5, i64 addrspace(5)* %16, align 8, !tbaa !10\l  store i64 %6, i64 addrspace(5)* %17, align 8, !tbaa !10\l  store i64 %7, i64 addrspace(5)* %18, align 8, !tbaa !10\l  store i64 %8, i64 addrspace(5)* %19, align 8, !tbaa !10\l  %27 = bitcast i32 addrspace(5)* %20 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 4, i8 addrspace(5)* %27) #20\l  %28 = call i32 @llvm.amdgcn.mbcnt.lo(i32 -1, i32 0) #20\l  %29 = call i32 @llvm.amdgcn.mbcnt.hi(i32 -1, i32 %28) #20\l  store i32 %29, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %30 = load i32, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %31 = call fastcc i32 @0(i32 %30) #23\l  store i32 %31, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %32 = bitcast i32 addrspace(5)* %21 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 4, i8 addrspace(5)* %32) #20\l  %33 = load i32, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %34 = call i32 @llvm.amdgcn.readfirstlane(i32 %33)\l  store i32 %34, i32 addrspace(5)* %21, align 4, !tbaa !8\l  %35 = bitcast %0 addrspace(1)* addrspace(5)* %22 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 8, i8 addrspace(5)* %35) #20\l  %36 = load i8*, i8* addrspace(5)* %10, align 8, !tbaa !4\l  %37 = addrspacecast i8* %36 to %0 addrspace(1)*\l  store %0 addrspace(1)* %37, %0 addrspace(1)* addrspace(5)* %22, align 8,\l... !tbaa !4\l  %38 = bitcast i64 addrspace(5)* %23 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 8, i8 addrspace(5)* %38) #20\l  %39 = load %0 addrspace(1)*, %0 addrspace(1)* addrspace(5)* %22, align 8,\l... !tbaa !4\l  %40 = load i32, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %41 = load i32, i32 addrspace(5)* %21, align 4, !tbaa !8\l  %42 = call fastcc i64 @1(%0 addrspace(1)* %39, i32 %40, i32 %41) #23\l  store i64 %42, i64 addrspace(5)* %23, align 8, !tbaa !10\l  %43 = bitcast %1 addrspace(1)* addrspace(5)* %24 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 8, i8 addrspace(5)* %43) #20\l  %44 = load %0 addrspace(1)*, %0 addrspace(1)* addrspace(5)* %22, align 8,\l... !tbaa !4\l  %45 = load i64, i64 addrspace(5)* %23, align 8, !tbaa !10\l  %46 = getelementptr %0, %0 addrspace(1)* %44, i64 0, i32 0\l  %47 = load %1 addrspace(1)*, %1 addrspace(1)* addrspace(1)* %46, align 8,\l... !tbaa !12\l  %48 = getelementptr %0, %0 addrspace(1)* %44, i64 0, i32 5\l  %49 = load i64, i64 addrspace(1)* %48, align 8, !tbaa !15\l  %50 = call fastcc %1 addrspace(1)* @2(%1 addrspace(1)* %47, i64 %49, i64\l... %45) #23\l  store %1 addrspace(1)* %50, %1 addrspace(1)* addrspace(5)* %24, align 8,\l... !tbaa !4\l  %51 = bitcast %2 addrspace(1)* addrspace(5)* %25 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 8, i8 addrspace(5)* %51) #20\l  %52 = load %0 addrspace(1)*, %0 addrspace(1)* addrspace(5)* %22, align 8,\l... !tbaa !4\l  %53 = load i64, i64 addrspace(5)* %23, align 8, !tbaa !10\l  %54 = getelementptr %0, %0 addrspace(1)* %52, i64 0, i32 1\l  %55 = load %2 addrspace(1)*, %2 addrspace(1)* addrspace(1)* %54, align 8,\l... !tbaa !16\l  %56 = getelementptr %0, %0 addrspace(1)* %52, i64 0, i32 5\l  %57 = load i64, i64 addrspace(1)* %56, align 8, !tbaa !15\l  %58 = call fastcc %2 addrspace(1)* @3(%2 addrspace(1)* %55, i64 %57, i64\l... %53) #23\l  store %2 addrspace(1)* %58, %2 addrspace(1)* addrspace(5)* %25, align 8,\l... !tbaa !4\l  %59 = load %1 addrspace(1)*, %1 addrspace(1)* addrspace(5)* %24, align 8,\l... !tbaa !4\l  %60 = load %2 addrspace(1)*, %2 addrspace(1)* addrspace(5)* %25, align 8,\l... !tbaa !4\l  %61 = load i32, i32 addrspace(5)* %11, align 4, !tbaa !8\l  %62 = load i64, i64 addrspace(5)* %12, align 8, !tbaa !10\l  %63 = load i64, i64 addrspace(5)* %13, align 8, !tbaa !10\l  %64 = load i64, i64 addrspace(5)* %14, align 8, !tbaa !10\l  %65 = load i64, i64 addrspace(5)* %15, align 8, !tbaa !10\l  %66 = load i64, i64 addrspace(5)* %16, align 8, !tbaa !10\l  %67 = load i64, i64 addrspace(5)* %17, align 8, !tbaa !10\l  %68 = load i64, i64 addrspace(5)* %18, align 8, !tbaa !10\l  %69 = load i64, i64 addrspace(5)* %19, align 8, !tbaa !10\l  %70 = load i32, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %71 = load i32, i32 addrspace(5)* %21, align 4, !tbaa !8\l  call fastcc void @4(%1 addrspace(1)* %59, %2 addrspace(1)* %60, i32 %61, i64\l... %62, i64 %63, i64 %64, i64 %65, i64 %66, i64 %67, i64 %68, i64 %69, i32 %70,\l... i32 %71) #23\l  %72 = load %0 addrspace(1)*, %0 addrspace(1)* addrspace(5)* %22, align 8,\l... !tbaa !4\l  %73 = load i64, i64 addrspace(5)* %23, align 8, !tbaa !10\l  %74 = load i32, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %75 = load i32, i32 addrspace(5)* %21, align 4, !tbaa !8\l  call fastcc void @5(%0 addrspace(1)* %72, i64 %73, i32 %74, i32 %75) #23\l  %76 = bitcast \<2 x i64\> addrspace(5)* %26 to i8 addrspace(5)*\l  call void @llvm.lifetime.start.p5i8(i64 16, i8 addrspace(5)* %76) #20\l  %77 = load %1 addrspace(1)*, %1 addrspace(1)* addrspace(5)* %24, align 8,\l... !tbaa !4\l  %78 = load %2 addrspace(1)*, %2 addrspace(1)* addrspace(5)* %25, align 8,\l... !tbaa !4\l  %79 = load i32, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %80 = load i32, i32 addrspace(5)* %21, align 4, !tbaa !8\l  %81 = call fastcc \<2 x i64\> @6(%1 addrspace(1)* %77, %2 addrspace(1)* %78,\l... i32 %79, i32 %80) #23\l  store \<2 x i64\> %81, \<2 x i64\> addrspace(5)* %26, align 16, !tbaa !17\l  %82 = load %0 addrspace(1)*, %0 addrspace(1)* addrspace(5)* %22, align 8,\l... !tbaa !4\l  %83 = load i64, i64 addrspace(5)* %23, align 8, !tbaa !10\l  %84 = load i32, i32 addrspace(5)* %20, align 4, !tbaa !8\l  %85 = load i32, i32 addrspace(5)* %21, align 4, !tbaa !8\l  call fastcc void @7(%0 addrspace(1)* %82, i64 %83, i32 %84, i32 %85) #23\l  %86 = load \<2 x i64\>, \<2 x i64\> addrspace(5)* %26, align 16, !tbaa !17\l  %87 = bitcast \<2 x i64\> addrspace(5)* %26 to i8 addrspace(5)*\l  call void @llvm.lifetime.end.p5i8(i64 16, i8 addrspace(5)* %87) #20\l  %88 = bitcast %2 addrspace(1)* addrspace(5)* %25 to i8 addrspace(5)*\l  call void @llvm.lifetime.end.p5i8(i64 8, i8 addrspace(5)* %88) #20\l  %89 = bitcast %1 addrspace(1)* addrspace(5)* %24 to i8 addrspace(5)*\l  call void @llvm.lifetime.end.p5i8(i64 8, i8 addrspace(5)* %89) #20\l  %90 = bitcast i64 addrspace(5)* %23 to i8 addrspace(5)*\l  call void @llvm.lifetime.end.p5i8(i64 8, i8 addrspace(5)* %90) #20\l  %91 = bitcast %0 addrspace(1)* addrspace(5)* %22 to i8 addrspace(5)*\l  call void @llvm.lifetime.end.p5i8(i64 8, i8 addrspace(5)* %91) #20\l  %92 = bitcast i32 addrspace(5)* %21 to i8 addrspace(5)*\l  call void @llvm.lifetime.end.p5i8(i64 4, i8 addrspace(5)* %92) #20\l  %93 = bitcast i32 addrspace(5)* %20 to i8 addrspace(5)*\l  call void @llvm.lifetime.end.p5i8(i64 4, i8 addrspace(5)* %93) #20\l  ret \<2 x i64\> %86\l}"];
}
