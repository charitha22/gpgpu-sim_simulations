digraph "CFG for '__ockl_printf_append_string_n' function" {
	label="CFG for '__ockl_printf_append_string_n' function";

	Node0x5563af314cf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%3:\l  %4 = icmp eq i8* %1, null\l  br i1 %4, label %5, label %14\l|{<s0>T|<s1>F}}"];
	Node0x5563af314cf0:s0 -> Node0x5563af314d40;
	Node0x5563af314cf0:s1 -> Node0x5563af315080;
	Node0x5563af314d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%5:\l5:                                                \l  %6 = and i64 %0, -227\l  %7 = or i64 %6, 34\l  %8 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr() #20\l  %9 = getelementptr inbounds i8, i8 addrspace(4)* %8, i64 24\l  %10 = bitcast i8 addrspace(4)* %9 to i64 addrspace(4)*\l  %11 = load i64, i64 addrspace(4)* %10, align 8, !tbaa !4\l  %12 = inttoptr i64 %11 to i8*\l  %13 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* %12, i64 %7,\l... i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0) #23\l  br label %.loopexit26\l}"];
	Node0x5563af314d40 -> Node0x5563af315680;
	Node0x5563af315080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%14:\l14:                                               \l  %15 = and i64 %0, -3\l  %16 = insertelement \<2 x i64\> \<i64 poison, i64 0\>, i64 %15, i64 0\l  %17 = tail call i8 addrspace(4)* @llvm.amdgcn.implicitarg.ptr() #20\l  %18 = getelementptr inbounds i8, i8 addrspace(4)* %17, i64 24\l  %19 = bitcast i8 addrspace(4)* %18 to i64 addrspace(4)*\l  %20 = load i64, i64 addrspace(4)* %19, align 8, !tbaa !4\l  %21 = inttoptr i64 %20 to i8*\l  br label %22\l}"];
	Node0x5563af315080 -> Node0x5563af315b90;
	Node0x5563af315b90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%22:\l22:                                               \l  %23 = phi i64 [ %2, %14 ], [ %444, %.loopexit ]\l  %24 = phi i8* [ %1, %14 ], [ %445, %.loopexit ]\l  %25 = phi \<2 x i64\> [ %16, %14 ], [ %443, %.loopexit ]\l  %26 = icmp ugt i64 %23, 56\l  %27 = extractelement \<2 x i64\> %25, i64 0\l  %28 = or i64 %27, 2\l  %29 = insertelement \<2 x i64\> poison, i64 %28, i64 0\l  %30 = select i1 %26, \<2 x i64\> %25, \<2 x i64\> %29\l  %31 = icmp ult i64 %23, 56\l  %32 = select i1 %31, i64 %23, i64 56\l  %33 = trunc i64 %32 to i32\l  %34 = extractelement \<2 x i64\> %30, i64 0\l  %35 = and i64 %34, -225\l  %36 = shl nuw nsw i64 %32, 2\l  %37 = add nuw nsw i64 %36, 28\l  %38 = and i64 %37, 480\l  %39 = or i64 %35, %38\l  %40 = icmp ugt i32 %33, 7\l  br i1 %40, label %43, label %41\l|{<s0>T|<s1>F}}"];
	Node0x5563af315b90:s0 -> Node0x5563af316700;
	Node0x5563af315b90:s1 -> Node0x5563af316790;
	Node0x5563af316790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%41:\l41:                                               \l  %42 = icmp eq i32 %33, 0\l  br i1 %42, label %.loopexit25, label %.preheader24\l|{<s0>T|<s1>F}}"];
	Node0x5563af316790:s0 -> Node0x5563af316960;
	Node0x5563af316790:s1 -> Node0x5563af316a40;
	Node0x5563af316700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%43:\l43:                                               \l  %44 = load i8, i8* %24, align 1, !tbaa !8\l  %45 = zext i8 %44 to i64\l  %46 = getelementptr inbounds i8, i8* %24, i64 1\l  %47 = load i8, i8* %46, align 1, !tbaa !8\l  %48 = zext i8 %47 to i64\l  %49 = shl nuw nsw i64 %48, 8\l  %50 = or i64 %49, %45\l  %51 = getelementptr inbounds i8, i8* %24, i64 2\l  %52 = load i8, i8* %51, align 1, !tbaa !8\l  %53 = zext i8 %52 to i64\l  %54 = shl nuw nsw i64 %53, 16\l  %55 = or i64 %50, %54\l  %56 = getelementptr inbounds i8, i8* %24, i64 3\l  %57 = load i8, i8* %56, align 1, !tbaa !8\l  %58 = zext i8 %57 to i64\l  %59 = shl nuw nsw i64 %58, 24\l  %60 = or i64 %55, %59\l  %61 = getelementptr inbounds i8, i8* %24, i64 4\l  %62 = load i8, i8* %61, align 1, !tbaa !8\l  %63 = zext i8 %62 to i64\l  %64 = shl nuw nsw i64 %63, 32\l  %65 = or i64 %60, %64\l  %66 = getelementptr inbounds i8, i8* %24, i64 5\l  %67 = load i8, i8* %66, align 1, !tbaa !8\l  %68 = zext i8 %67 to i64\l  %69 = shl nuw nsw i64 %68, 40\l  %70 = or i64 %65, %69\l  %71 = getelementptr inbounds i8, i8* %24, i64 6\l  %72 = load i8, i8* %71, align 1, !tbaa !8\l  %73 = zext i8 %72 to i64\l  %74 = shl nuw nsw i64 %73, 48\l  %75 = or i64 %70, %74\l  %76 = getelementptr inbounds i8, i8* %24, i64 7\l  %77 = load i8, i8* %76, align 1, !tbaa !8\l  %78 = zext i8 %77 to i64\l  %79 = shl nuw i64 %78, 56\l  %80 = or i64 %75, %79\l  %81 = add nsw i32 %33, -8\l  %82 = getelementptr inbounds i8, i8* %24, i64 8\l  br label %.loopexit25\l}"];
	Node0x5563af316700 -> Node0x5563af316960;
	Node0x5563af316a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader24:                                     \l  %83 = phi i32 [ %94, %.preheader24 ], [ 0, %41 ]\l  %84 = phi i64 [ %93, %.preheader24 ], [ 0, %41 ]\l  %85 = zext i32 %83 to i64\l  %86 = getelementptr inbounds i8, i8* %24, i64 %85\l  %87 = load i8, i8* %86, align 1, !tbaa !8\l  %88 = zext i8 %87 to i64\l  %89 = shl i32 %83, 3\l  %90 = and i32 %89, 56\l  %91 = zext i32 %90 to i64\l  %92 = shl nuw i64 %88, %91\l  %93 = or i64 %92, %84\l  %94 = add nuw nsw i32 %83, 1\l  %95 = icmp eq i32 %94, %33\l  br i1 %95, label %.loopexit25, label %.preheader24\l|{<s0>T|<s1>F}}"];
	Node0x5563af316a40:s0 -> Node0x5563af316960;
	Node0x5563af316a40:s1 -> Node0x5563af316a40;
	Node0x5563af316960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{.loopexit25:                                      \l  %96 = phi i8* [ %82, %43 ], [ %24, %41 ], [ %24, %.preheader24 ]\l  %97 = phi i32 [ %81, %43 ], [ 0, %41 ], [ 0, %.preheader24 ]\l  %98 = phi i64 [ %80, %43 ], [ 0, %41 ], [ %93, %.preheader24 ]\l  %99 = icmp ugt i32 %97, 7\l  br i1 %99, label %102, label %100\l|{<s0>T|<s1>F}}"];
	Node0x5563af316960:s0 -> Node0x5563af318b80;
	Node0x5563af316960:s1 -> Node0x5563af318bd0;
	Node0x5563af318bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%100:\l100:                                              \l  %101 = icmp eq i32 %97, 0\l  br i1 %101, label %.loopexit23, label %.preheader22\l|{<s0>T|<s1>F}}"];
	Node0x5563af318bd0:s0 -> Node0x5563af318d60;
	Node0x5563af318bd0:s1 -> Node0x5563af318db0;
	Node0x5563af318b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%102:\l102:                                              \l  %103 = load i8, i8* %96, align 1, !tbaa !8\l  %104 = zext i8 %103 to i64\l  %105 = getelementptr inbounds i8, i8* %96, i64 1\l  %106 = load i8, i8* %105, align 1, !tbaa !8\l  %107 = zext i8 %106 to i64\l  %108 = shl nuw nsw i64 %107, 8\l  %109 = or i64 %108, %104\l  %110 = getelementptr inbounds i8, i8* %96, i64 2\l  %111 = load i8, i8* %110, align 1, !tbaa !8\l  %112 = zext i8 %111 to i64\l  %113 = shl nuw nsw i64 %112, 16\l  %114 = or i64 %109, %113\l  %115 = getelementptr inbounds i8, i8* %96, i64 3\l  %116 = load i8, i8* %115, align 1, !tbaa !8\l  %117 = zext i8 %116 to i64\l  %118 = shl nuw nsw i64 %117, 24\l  %119 = or i64 %114, %118\l  %120 = getelementptr inbounds i8, i8* %96, i64 4\l  %121 = load i8, i8* %120, align 1, !tbaa !8\l  %122 = zext i8 %121 to i64\l  %123 = shl nuw nsw i64 %122, 32\l  %124 = or i64 %119, %123\l  %125 = getelementptr inbounds i8, i8* %96, i64 5\l  %126 = load i8, i8* %125, align 1, !tbaa !8\l  %127 = zext i8 %126 to i64\l  %128 = shl nuw nsw i64 %127, 40\l  %129 = or i64 %124, %128\l  %130 = getelementptr inbounds i8, i8* %96, i64 6\l  %131 = load i8, i8* %130, align 1, !tbaa !8\l  %132 = zext i8 %131 to i64\l  %133 = shl nuw nsw i64 %132, 48\l  %134 = or i64 %129, %133\l  %135 = getelementptr inbounds i8, i8* %96, i64 7\l  %136 = load i8, i8* %135, align 1, !tbaa !8\l  %137 = zext i8 %136 to i64\l  %138 = shl nuw i64 %137, 56\l  %139 = or i64 %134, %138\l  %140 = add nsw i32 %97, -8\l  %141 = getelementptr inbounds i8, i8* %96, i64 8\l  br label %.loopexit23\l}"];
	Node0x5563af318b80 -> Node0x5563af318d60;
	Node0x5563af318db0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader22:                                     \l  %142 = phi i32 [ %152, %.preheader22 ], [ 0, %100 ]\l  %143 = phi i64 [ %151, %.preheader22 ], [ 0, %100 ]\l  %144 = zext i32 %142 to i64\l  %145 = getelementptr inbounds i8, i8* %96, i64 %144\l  %146 = load i8, i8* %145, align 1, !tbaa !8\l  %147 = zext i8 %146 to i64\l  %148 = shl i32 %142, 3\l  %149 = zext i32 %148 to i64\l  %150 = shl nuw i64 %147, %149\l  %151 = or i64 %150, %143\l  %152 = add nuw nsw i32 %142, 1\l  %153 = icmp eq i32 %152, %97\l  br i1 %153, label %.loopexit23, label %.preheader22\l|{<s0>T|<s1>F}}"];
	Node0x5563af318db0:s0 -> Node0x5563af318d60;
	Node0x5563af318db0:s1 -> Node0x5563af318db0;
	Node0x5563af318d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{.loopexit23:                                      \l  %154 = phi i8* [ %141, %102 ], [ %96, %100 ], [ %96, %.preheader22 ]\l  %155 = phi i32 [ %140, %102 ], [ 0, %100 ], [ 0, %.preheader22 ]\l  %156 = phi i64 [ %139, %102 ], [ 0, %100 ], [ %151, %.preheader22 ]\l  %157 = icmp ugt i32 %155, 7\l  br i1 %157, label %160, label %158\l|{<s0>T|<s1>F}}"];
	Node0x5563af318d60:s0 -> Node0x5563af31b640;
	Node0x5563af318d60:s1 -> Node0x5563af31b690;
	Node0x5563af31b690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%158:\l158:                                              \l  %159 = icmp eq i32 %155, 0\l  br i1 %159, label %.loopexit21, label %.preheader20\l|{<s0>T|<s1>F}}"];
	Node0x5563af31b690:s0 -> Node0x5563af31b820;
	Node0x5563af31b690:s1 -> Node0x5563af31b870;
	Node0x5563af31b640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%160:\l160:                                              \l  %161 = load i8, i8* %154, align 1, !tbaa !8\l  %162 = zext i8 %161 to i64\l  %163 = getelementptr inbounds i8, i8* %154, i64 1\l  %164 = load i8, i8* %163, align 1, !tbaa !8\l  %165 = zext i8 %164 to i64\l  %166 = shl nuw nsw i64 %165, 8\l  %167 = or i64 %166, %162\l  %168 = getelementptr inbounds i8, i8* %154, i64 2\l  %169 = load i8, i8* %168, align 1, !tbaa !8\l  %170 = zext i8 %169 to i64\l  %171 = shl nuw nsw i64 %170, 16\l  %172 = or i64 %167, %171\l  %173 = getelementptr inbounds i8, i8* %154, i64 3\l  %174 = load i8, i8* %173, align 1, !tbaa !8\l  %175 = zext i8 %174 to i64\l  %176 = shl nuw nsw i64 %175, 24\l  %177 = or i64 %172, %176\l  %178 = getelementptr inbounds i8, i8* %154, i64 4\l  %179 = load i8, i8* %178, align 1, !tbaa !8\l  %180 = zext i8 %179 to i64\l  %181 = shl nuw nsw i64 %180, 32\l  %182 = or i64 %177, %181\l  %183 = getelementptr inbounds i8, i8* %154, i64 5\l  %184 = load i8, i8* %183, align 1, !tbaa !8\l  %185 = zext i8 %184 to i64\l  %186 = shl nuw nsw i64 %185, 40\l  %187 = or i64 %182, %186\l  %188 = getelementptr inbounds i8, i8* %154, i64 6\l  %189 = load i8, i8* %188, align 1, !tbaa !8\l  %190 = zext i8 %189 to i64\l  %191 = shl nuw nsw i64 %190, 48\l  %192 = or i64 %187, %191\l  %193 = getelementptr inbounds i8, i8* %154, i64 7\l  %194 = load i8, i8* %193, align 1, !tbaa !8\l  %195 = zext i8 %194 to i64\l  %196 = shl nuw i64 %195, 56\l  %197 = or i64 %192, %196\l  %198 = add nsw i32 %155, -8\l  %199 = getelementptr inbounds i8, i8* %154, i64 8\l  br label %.loopexit21\l}"];
	Node0x5563af31b640 -> Node0x5563af31b820;
	Node0x5563af31b870 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader20:                                     \l  %200 = phi i32 [ %210, %.preheader20 ], [ 0, %158 ]\l  %201 = phi i64 [ %209, %.preheader20 ], [ 0, %158 ]\l  %202 = zext i32 %200 to i64\l  %203 = getelementptr inbounds i8, i8* %154, i64 %202\l  %204 = load i8, i8* %203, align 1, !tbaa !8\l  %205 = zext i8 %204 to i64\l  %206 = shl i32 %200, 3\l  %207 = zext i32 %206 to i64\l  %208 = shl nuw i64 %205, %207\l  %209 = or i64 %208, %201\l  %210 = add nuw nsw i32 %200, 1\l  %211 = icmp eq i32 %210, %155\l  br i1 %211, label %.loopexit21, label %.preheader20\l|{<s0>T|<s1>F}}"];
	Node0x5563af31b870:s0 -> Node0x5563af31b820;
	Node0x5563af31b870:s1 -> Node0x5563af31b870;
	Node0x5563af31b820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{.loopexit21:                                      \l  %212 = phi i8* [ %199, %160 ], [ %154, %158 ], [ %154, %.preheader20 ]\l  %213 = phi i32 [ %198, %160 ], [ 0, %158 ], [ 0, %.preheader20 ]\l  %214 = phi i64 [ %197, %160 ], [ 0, %158 ], [ %209, %.preheader20 ]\l  %215 = icmp ugt i32 %213, 7\l  br i1 %215, label %218, label %216\l|{<s0>T|<s1>F}}"];
	Node0x5563af31b820:s0 -> Node0x5563af31d8f0;
	Node0x5563af31b820:s1 -> Node0x5563af31d940;
	Node0x5563af31d940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%216:\l216:                                              \l  %217 = icmp eq i32 %213, 0\l  br i1 %217, label %.loopexit19, label %.preheader18\l|{<s0>T|<s1>F}}"];
	Node0x5563af31d940:s0 -> Node0x5563af31dad0;
	Node0x5563af31d940:s1 -> Node0x5563af31db20;
	Node0x5563af31d8f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%218:\l218:                                              \l  %219 = load i8, i8* %212, align 1, !tbaa !8\l  %220 = zext i8 %219 to i64\l  %221 = getelementptr inbounds i8, i8* %212, i64 1\l  %222 = load i8, i8* %221, align 1, !tbaa !8\l  %223 = zext i8 %222 to i64\l  %224 = shl nuw nsw i64 %223, 8\l  %225 = or i64 %224, %220\l  %226 = getelementptr inbounds i8, i8* %212, i64 2\l  %227 = load i8, i8* %226, align 1, !tbaa !8\l  %228 = zext i8 %227 to i64\l  %229 = shl nuw nsw i64 %228, 16\l  %230 = or i64 %225, %229\l  %231 = getelementptr inbounds i8, i8* %212, i64 3\l  %232 = load i8, i8* %231, align 1, !tbaa !8\l  %233 = zext i8 %232 to i64\l  %234 = shl nuw nsw i64 %233, 24\l  %235 = or i64 %230, %234\l  %236 = getelementptr inbounds i8, i8* %212, i64 4\l  %237 = load i8, i8* %236, align 1, !tbaa !8\l  %238 = zext i8 %237 to i64\l  %239 = shl nuw nsw i64 %238, 32\l  %240 = or i64 %235, %239\l  %241 = getelementptr inbounds i8, i8* %212, i64 5\l  %242 = load i8, i8* %241, align 1, !tbaa !8\l  %243 = zext i8 %242 to i64\l  %244 = shl nuw nsw i64 %243, 40\l  %245 = or i64 %240, %244\l  %246 = getelementptr inbounds i8, i8* %212, i64 6\l  %247 = load i8, i8* %246, align 1, !tbaa !8\l  %248 = zext i8 %247 to i64\l  %249 = shl nuw nsw i64 %248, 48\l  %250 = or i64 %245, %249\l  %251 = getelementptr inbounds i8, i8* %212, i64 7\l  %252 = load i8, i8* %251, align 1, !tbaa !8\l  %253 = zext i8 %252 to i64\l  %254 = shl nuw i64 %253, 56\l  %255 = or i64 %250, %254\l  %256 = add i32 %213, -8\l  %257 = getelementptr inbounds i8, i8* %212, i64 8\l  br label %.loopexit19\l}"];
	Node0x5563af31d8f0 -> Node0x5563af31dad0;
	Node0x5563af31db20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader18:                                     \l  %258 = phi i32 [ %268, %.preheader18 ], [ 0, %216 ]\l  %259 = phi i64 [ %267, %.preheader18 ], [ 0, %216 ]\l  %260 = zext i32 %258 to i64\l  %261 = getelementptr inbounds i8, i8* %212, i64 %260\l  %262 = load i8, i8* %261, align 1, !tbaa !8\l  %263 = zext i8 %262 to i64\l  %264 = shl i32 %258, 3\l  %265 = zext i32 %264 to i64\l  %266 = shl nuw i64 %263, %265\l  %267 = or i64 %266, %259\l  %268 = add nuw nsw i32 %258, 1\l  %269 = icmp eq i32 %268, %213\l  br i1 %269, label %.loopexit19, label %.preheader18\l|{<s0>T|<s1>F}}"];
	Node0x5563af31db20:s0 -> Node0x5563af31dad0;
	Node0x5563af31db20:s1 -> Node0x5563af31db20;
	Node0x5563af31dad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{.loopexit19:                                      \l  %270 = phi i8* [ %257, %218 ], [ %212, %216 ], [ %212, %.preheader18 ]\l  %271 = phi i32 [ %256, %218 ], [ 0, %216 ], [ 0, %.preheader18 ]\l  %272 = phi i64 [ %255, %218 ], [ 0, %216 ], [ %267, %.preheader18 ]\l  %273 = icmp ugt i32 %271, 7\l  br i1 %273, label %276, label %274\l|{<s0>T|<s1>F}}"];
	Node0x5563af31dad0:s0 -> Node0x5563af3203c0;
	Node0x5563af31dad0:s1 -> Node0x5563af320410;
	Node0x5563af320410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%274:\l274:                                              \l  %275 = icmp eq i32 %271, 0\l  br i1 %275, label %.loopexit17, label %.preheader16\l|{<s0>T|<s1>F}}"];
	Node0x5563af320410:s0 -> Node0x5563af3205a0;
	Node0x5563af320410:s1 -> Node0x5563af3205f0;
	Node0x5563af3203c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%276:\l276:                                              \l  %277 = load i8, i8* %270, align 1, !tbaa !8\l  %278 = zext i8 %277 to i64\l  %279 = getelementptr inbounds i8, i8* %270, i64 1\l  %280 = load i8, i8* %279, align 1, !tbaa !8\l  %281 = zext i8 %280 to i64\l  %282 = shl nuw nsw i64 %281, 8\l  %283 = or i64 %282, %278\l  %284 = getelementptr inbounds i8, i8* %270, i64 2\l  %285 = load i8, i8* %284, align 1, !tbaa !8\l  %286 = zext i8 %285 to i64\l  %287 = shl nuw nsw i64 %286, 16\l  %288 = or i64 %283, %287\l  %289 = getelementptr inbounds i8, i8* %270, i64 3\l  %290 = load i8, i8* %289, align 1, !tbaa !8\l  %291 = zext i8 %290 to i64\l  %292 = shl nuw nsw i64 %291, 24\l  %293 = or i64 %288, %292\l  %294 = getelementptr inbounds i8, i8* %270, i64 4\l  %295 = load i8, i8* %294, align 1, !tbaa !8\l  %296 = zext i8 %295 to i64\l  %297 = shl nuw nsw i64 %296, 32\l  %298 = or i64 %293, %297\l  %299 = getelementptr inbounds i8, i8* %270, i64 5\l  %300 = load i8, i8* %299, align 1, !tbaa !8\l  %301 = zext i8 %300 to i64\l  %302 = shl nuw nsw i64 %301, 40\l  %303 = or i64 %298, %302\l  %304 = getelementptr inbounds i8, i8* %270, i64 6\l  %305 = load i8, i8* %304, align 1, !tbaa !8\l  %306 = zext i8 %305 to i64\l  %307 = shl nuw nsw i64 %306, 48\l  %308 = or i64 %303, %307\l  %309 = getelementptr inbounds i8, i8* %270, i64 7\l  %310 = load i8, i8* %309, align 1, !tbaa !8\l  %311 = zext i8 %310 to i64\l  %312 = shl nuw i64 %311, 56\l  %313 = or i64 %308, %312\l  %314 = add i32 %271, -8\l  %315 = getelementptr inbounds i8, i8* %270, i64 8\l  br label %.loopexit17\l}"];
	Node0x5563af3203c0 -> Node0x5563af3205a0;
	Node0x5563af3205f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader16:                                     \l  %316 = phi i32 [ %326, %.preheader16 ], [ 0, %274 ]\l  %317 = phi i64 [ %325, %.preheader16 ], [ 0, %274 ]\l  %318 = zext i32 %316 to i64\l  %319 = getelementptr inbounds i8, i8* %270, i64 %318\l  %320 = load i8, i8* %319, align 1, !tbaa !8\l  %321 = zext i8 %320 to i64\l  %322 = shl i32 %316, 3\l  %323 = zext i32 %322 to i64\l  %324 = shl nuw i64 %321, %323\l  %325 = or i64 %324, %317\l  %326 = add nuw nsw i32 %316, 1\l  %327 = icmp eq i32 %326, %271\l  br i1 %327, label %.loopexit17, label %.preheader16\l|{<s0>T|<s1>F}}"];
	Node0x5563af3205f0:s0 -> Node0x5563af3205a0;
	Node0x5563af3205f0:s1 -> Node0x5563af3205f0;
	Node0x5563af3205a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{.loopexit17:                                      \l  %328 = phi i8* [ %315, %276 ], [ %270, %274 ], [ %270, %.preheader16 ]\l  %329 = phi i32 [ %314, %276 ], [ 0, %274 ], [ 0, %.preheader16 ]\l  %330 = phi i64 [ %313, %276 ], [ 0, %274 ], [ %325, %.preheader16 ]\l  %331 = icmp ugt i32 %329, 7\l  br i1 %331, label %334, label %332\l|{<s0>T|<s1>F}}"];
	Node0x5563af3205a0:s0 -> Node0x5563af322670;
	Node0x5563af3205a0:s1 -> Node0x5563af3226c0;
	Node0x5563af3226c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%332:\l332:                                              \l  %333 = icmp eq i32 %329, 0\l  br i1 %333, label %.loopexit15, label %.preheader14\l|{<s0>T|<s1>F}}"];
	Node0x5563af3226c0:s0 -> Node0x5563af322850;
	Node0x5563af3226c0:s1 -> Node0x5563af322a40;
	Node0x5563af322670 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%334:\l334:                                              \l  %335 = load i8, i8* %328, align 1, !tbaa !8\l  %336 = zext i8 %335 to i64\l  %337 = getelementptr inbounds i8, i8* %328, i64 1\l  %338 = load i8, i8* %337, align 1, !tbaa !8\l  %339 = zext i8 %338 to i64\l  %340 = shl nuw nsw i64 %339, 8\l  %341 = or i64 %340, %336\l  %342 = getelementptr inbounds i8, i8* %328, i64 2\l  %343 = load i8, i8* %342, align 1, !tbaa !8\l  %344 = zext i8 %343 to i64\l  %345 = shl nuw nsw i64 %344, 16\l  %346 = or i64 %341, %345\l  %347 = getelementptr inbounds i8, i8* %328, i64 3\l  %348 = load i8, i8* %347, align 1, !tbaa !8\l  %349 = zext i8 %348 to i64\l  %350 = shl nuw nsw i64 %349, 24\l  %351 = or i64 %346, %350\l  %352 = getelementptr inbounds i8, i8* %328, i64 4\l  %353 = load i8, i8* %352, align 1, !tbaa !8\l  %354 = zext i8 %353 to i64\l  %355 = shl nuw nsw i64 %354, 32\l  %356 = or i64 %351, %355\l  %357 = getelementptr inbounds i8, i8* %328, i64 5\l  %358 = load i8, i8* %357, align 1, !tbaa !8\l  %359 = zext i8 %358 to i64\l  %360 = shl nuw nsw i64 %359, 40\l  %361 = or i64 %356, %360\l  %362 = getelementptr inbounds i8, i8* %328, i64 6\l  %363 = load i8, i8* %362, align 1, !tbaa !8\l  %364 = zext i8 %363 to i64\l  %365 = shl nuw nsw i64 %364, 48\l  %366 = or i64 %361, %365\l  %367 = getelementptr inbounds i8, i8* %328, i64 7\l  %368 = load i8, i8* %367, align 1, !tbaa !8\l  %369 = zext i8 %368 to i64\l  %370 = shl nuw i64 %369, 56\l  %371 = or i64 %366, %370\l  %372 = add i32 %329, -8\l  %373 = getelementptr inbounds i8, i8* %328, i64 8\l  br label %.loopexit15\l}"];
	Node0x5563af322670 -> Node0x5563af322850;
	Node0x5563af322a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader14:                                     \l  %374 = phi i32 [ %384, %.preheader14 ], [ 0, %332 ]\l  %375 = phi i64 [ %383, %.preheader14 ], [ 0, %332 ]\l  %376 = zext i32 %374 to i64\l  %377 = getelementptr inbounds i8, i8* %328, i64 %376\l  %378 = load i8, i8* %377, align 1, !tbaa !8\l  %379 = zext i8 %378 to i64\l  %380 = shl i32 %374, 3\l  %381 = zext i32 %380 to i64\l  %382 = shl nuw i64 %379, %381\l  %383 = or i64 %382, %375\l  %384 = add nuw nsw i32 %374, 1\l  %385 = icmp eq i32 %384, %329\l  br i1 %385, label %.loopexit15, label %.preheader14\l|{<s0>T|<s1>F}}"];
	Node0x5563af322a40:s0 -> Node0x5563af322850;
	Node0x5563af322a40:s1 -> Node0x5563af322a40;
	Node0x5563af322850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{.loopexit15:                                      \l  %386 = phi i8* [ %373, %334 ], [ %328, %332 ], [ %328, %.preheader14 ]\l  %387 = phi i32 [ %372, %334 ], [ 0, %332 ], [ 0, %.preheader14 ]\l  %388 = phi i64 [ %371, %334 ], [ 0, %332 ], [ %383, %.preheader14 ]\l  %389 = icmp ugt i32 %387, 7\l  br i1 %389, label %392, label %390\l|{<s0>T|<s1>F}}"];
	Node0x5563af322850:s0 -> Node0x5563af324ac0;
	Node0x5563af322850:s1 -> Node0x5563af324b10;
	Node0x5563af324b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%390:\l390:                                              \l  %391 = icmp eq i32 %387, 0\l  br i1 %391, label %.loopexit, label %.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5563af324b10:s0 -> Node0x5563af315c50;
	Node0x5563af324b10:s1 -> Node0x5563af324ca0;
	Node0x5563af324ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%392:\l392:                                              \l  %393 = load i8, i8* %386, align 1, !tbaa !8\l  %394 = zext i8 %393 to i64\l  %395 = getelementptr inbounds i8, i8* %386, i64 1\l  %396 = load i8, i8* %395, align 1, !tbaa !8\l  %397 = zext i8 %396 to i64\l  %398 = shl nuw nsw i64 %397, 8\l  %399 = or i64 %398, %394\l  %400 = getelementptr inbounds i8, i8* %386, i64 2\l  %401 = load i8, i8* %400, align 1, !tbaa !8\l  %402 = zext i8 %401 to i64\l  %403 = shl nuw nsw i64 %402, 16\l  %404 = or i64 %399, %403\l  %405 = getelementptr inbounds i8, i8* %386, i64 3\l  %406 = load i8, i8* %405, align 1, !tbaa !8\l  %407 = zext i8 %406 to i64\l  %408 = shl nuw nsw i64 %407, 24\l  %409 = or i64 %404, %408\l  %410 = getelementptr inbounds i8, i8* %386, i64 4\l  %411 = load i8, i8* %410, align 1, !tbaa !8\l  %412 = zext i8 %411 to i64\l  %413 = shl nuw nsw i64 %412, 32\l  %414 = or i64 %409, %413\l  %415 = getelementptr inbounds i8, i8* %386, i64 5\l  %416 = load i8, i8* %415, align 1, !tbaa !8\l  %417 = zext i8 %416 to i64\l  %418 = shl nuw nsw i64 %417, 40\l  %419 = or i64 %414, %418\l  %420 = getelementptr inbounds i8, i8* %386, i64 6\l  %421 = load i8, i8* %420, align 1, !tbaa !8\l  %422 = zext i8 %421 to i64\l  %423 = shl nuw nsw i64 %422, 48\l  %424 = or i64 %419, %423\l  %425 = getelementptr inbounds i8, i8* %386, i64 7\l  %426 = load i8, i8* %425, align 1, !tbaa !8\l  %427 = zext i8 %426 to i64\l  %428 = shl nuw i64 %427, 56\l  %429 = or i64 %424, %428\l  br label %.loopexit\l}"];
	Node0x5563af324ac0 -> Node0x5563af315c50;
	Node0x5563af324ca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader:                                       \l  %430 = phi i32 [ %440, %.preheader ], [ 0, %390 ]\l  %431 = phi i64 [ %439, %.preheader ], [ 0, %390 ]\l  %432 = zext i32 %430 to i64\l  %433 = getelementptr inbounds i8, i8* %386, i64 %432\l  %434 = load i8, i8* %433, align 1, !tbaa !8\l  %435 = zext i8 %434 to i64\l  %436 = shl i32 %430, 3\l  %437 = zext i32 %436 to i64\l  %438 = shl nuw i64 %435, %437\l  %439 = or i64 %438, %431\l  %440 = add nuw nsw i32 %430, 1\l  %441 = icmp eq i32 %440, %387\l  br i1 %441, label %.loopexit, label %.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5563af324ca0:s0 -> Node0x5563af315c50;
	Node0x5563af324ca0:s1 -> Node0x5563af324ca0;
	Node0x5563af315c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{.loopexit:                                        \l  %442 = phi i64 [ %429, %392 ], [ 0, %390 ], [ %439, %.preheader ]\l  %443 = tail call fastcc \<2 x i64\> @__ockl_hostcall_internal(i8* %21, i64\l... %39, i64 %98, i64 %156, i64 %214, i64 %272, i64 %330, i64 %388, i64 %442) #23\l  %444 = sub i64 %23, %32\l  %445 = getelementptr inbounds i8, i8* %24, i64 %32\l  %446 = icmp eq i64 %444, 0\l  br i1 %446, label %.loopexit26, label %22\l|{<s0>T|<s1>F}}"];
	Node0x5563af315c50:s0 -> Node0x5563af315680;
	Node0x5563af315c50:s1 -> Node0x5563af315b90;
	Node0x5563af315680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{.loopexit26:                                      \l  ret void\l}"];
}
