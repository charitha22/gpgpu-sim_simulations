digraph "CFG for '' function" {
	label="CFG for '' function";

	Node0x5563af3136d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%4:\l  %5 = icmp eq i32 %2, %3\l  br i1 %5, label %6, label %.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x5563af3136d0:s0 -> Node0x5563af313770;
	Node0x5563af3136d0:s1 -> Node0x5563af3137c0;
	Node0x5563af313770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%6:\l6:                                                \l  %7 = getelementptr %0, %0 addrspace(1)* %0, i64 0, i32 5\l  %8 = load i64, i64 addrspace(1)* %7, align 8, !tbaa !4\l  %9 = add i64 %8, 1\l  %10 = add i64 %9, %1\l  %11 = icmp eq i64 %10, 0\l  %12 = select i1 %11, i64 %9, i64 %10\l  %13 = getelementptr inbounds %0, %0 addrspace(1)* %0, i64 0, i32 3\l  %14 = load atomic i64, i64 addrspace(1)* %13 syncscope(\"one-as\") monotonic,\l... align 8\l  %15 = getelementptr %0, %0 addrspace(1)* %0, i64 0, i32 0\l  %16 = load %1 addrspace(1)*, %1 addrspace(1)* addrspace(1)* %15, align 8,\l... !tbaa !11\l  %17 = and i64 %12, %8\l  %18 = getelementptr inbounds %1, %1 addrspace(1)* %16, i64 %17, i32 0\l  store i64 %14, i64 addrspace(1)* %18, align 8, !tbaa !12\l  %19 = cmpxchg i64 addrspace(1)* %13, i64 %14, i64 %12 syncscope(\"one-as\")\l... release monotonic\l  %20 = extractvalue \{ i64, i1 \} %19, 1\l  br i1 %20, label %.loopexit, label %.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5563af313770:s0 -> Node0x5563af3137c0;
	Node0x5563af313770:s1 -> Node0x5563af313720;
	Node0x5563af313720 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{.preheader:                                       \l  %21 = phi \{ i64, i1 \} [ %23, %.preheader ], [ %19, %6 ]\l  %22 = extractvalue \{ i64, i1 \} %21, 0\l  tail call void @llvm.amdgcn.s.sleep(i32 1) #20\l  store i64 %22, i64 addrspace(1)* %18, align 8, !tbaa !12\l  %23 = cmpxchg i64 addrspace(1)* %13, i64 %22, i64 %12 syncscope(\"one-as\")\l... release monotonic\l  %24 = extractvalue \{ i64, i1 \} %23, 1\l  br i1 %24, label %.loopexit, label %.preheader\l|{<s0>T|<s1>F}}"];
	Node0x5563af313720:s0 -> Node0x5563af3137c0;
	Node0x5563af313720:s1 -> Node0x5563af313720;
	Node0x5563af3137c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{.loopexit:                                        \l  ret void\l}"];
}
